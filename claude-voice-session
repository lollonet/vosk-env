#!/bin/bash
# Claude Voice Session - Claude Code con voice input integrato

# Colori
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

print_header() {
    echo -e "${BLUE}üé§ Claude Code + Voice Input Integration${NC}"
    echo -e "${BLUE}=======================================${NC}"
}

check_deps() {
    # Claude Code
    if ! command -v claude >/dev/null 2>&1; then
        echo -e "${RED}‚ùå Claude Code non trovato${NC}"
        echo -e "${YELLOW}üí° Installa: https://github.com/anthropics/claude-code${NC}"
        return 1
    fi
    
    # Voice server
    if ! nc -z localhost 8765 2>/dev/null; then
        echo -e "${RED}‚ùå Voice server non attivo${NC}"
        echo -e "${YELLOW}üí° Avvia: ./voice_daemon.sh start${NC}"
        return 1
    fi
    
    # Python modules
    if ! python3 -c "import websockets, asyncio" 2>/dev/null; then
        echo -e "${RED}‚ùå Moduli Python mancanti${NC}"
        echo -e "${YELLOW}üí° Installa: pip install websockets${NC}"
        return 1
    fi
    
    return 0
}

show_help() {
    print_header
    echo
    echo "Utilizzo: claude-voice-session [opzione]"
    echo
    echo "Opzioni:"
    echo "  chat              Claude chat con voice (default)"
    echo "  computer-use      Claude computer use con voice"
    echo "  help              Mostra questo aiuto"
    echo
    echo "‚å®Ô∏è  Hotkeys durante la sessione:"
    echo "  Ctrl+/            Toggle voice input ON/OFF"
    echo "  Ctrl+?            Switch lingua IT ‚Üî EN"
    echo "  Ctrl+C            Esci dalla sessione"
    echo
    echo "üé§ Voice Templates:"
    echo "  'spiega questo codice'"
    echo "  'debug questo errore'"
    echo "  'ottimizza questa funzione'"
    echo "  'crea una funzione che...'"
    echo "  'refactor questo codice'"
    echo "  'test per questa classe'"
}

start_session() {
    local mode="$1"
    
    print_header
    echo
    
    if ! check_deps; then
        return 1
    fi
    
    echo -e "${GREEN}üöÄ Avvio Claude Code con Voice Integration...${NC}"
    echo
    
    # Trova script path
    SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"
    VOICE_SCRIPT="$SCRIPT_DIR/scripts/claude_voice_session.py"
    
    # Fallback per path comuni
    if [ ! -f "$VOICE_SCRIPT" ]; then
        VOICE_SCRIPT="$HOME/vosk-env/scripts/claude_voice_session.py"
    fi
    
    if [ ! -f "$VOICE_SCRIPT" ]; then
        echo -e "${RED}‚ùå Script voice non trovato${NC}"
        echo -e "${YELLOW}üí° Assicurati di essere nella directory corretta${NC}"
        return 1
    fi
    
    case "$mode" in
        computer-use)
            python3 "$VOICE_SCRIPT" --computer-use
            ;;
        chat|*)
            python3 "$VOICE_SCRIPT" --chat
            ;;
    esac
}

# Main
case "${1:-chat}" in
    chat)
        start_session "chat"
        ;;
    computer-use)
        start_session "computer-use"
        ;;
    help|--help|-h)
        show_help
        ;;
    *)
        echo -e "${RED}‚ùå Opzione non riconosciuta: $1${NC}"
        echo -e "${YELLOW}üí° Usa: claude-voice-session help${NC}"
        exit 1
        ;;
esac
